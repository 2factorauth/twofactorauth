name: Repository builds and tests
on: [ push, pull_request ]
jobs:

  tests:
    name: Tests
    container: 2factorauth/twofactorauth:4.0
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Bundle install
        run: bundle install
      - uses: actions/cache@v2
        with:
          path: |
            /tmp/iso-*.txt
            /tmp/alexa
          key: tmp-files-${{ hashFiles('/tmp/alexa/*')}}
      - name: Validate JSON structure
        run:  bundle exec ruby ./tests/validate-json.rb
      - name: Validate Region codes
        run:  bundle exec ruby ./tests/region-codes.rb
      - name: Validate Language codes
        run: bundle exec ruby ./tests/language-codes.rb
      - name: Validate Entry tags
        run: bundle exec ruby ./tests/entry-tags.rb
      - name: Validate file extensions
        run:  tests/file-extensions.sh

  build:
    name: Build
    container: 2factorauth/twofactorauth:4.0
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Bundle install
        run: bundle install
      - name: Generate API files
        run: |
          mkdir -p api/v1
          mkdir -p api/v2
          mkdir -p api/v3
          ./scripts/APIv1.rb
          ./scripts/APIv2.rb
          ./scripts/APIv3.rb
      - name: Build the site
        run: bundle exec jekyll build --config _config.yml
      - name: Create Artifact
        run: tar -czf build.tar.gz .
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: build.tar.gz

  publish:
    name: Publish build
    needs: [ tests, build ]
    container: 2factorauth/twofactorauth:4.0
    runs-on: ubuntu-latest
    env:
      JEKYLL_ENV: production
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: build
      - name: Extract artifact
        run: tar -xzf build.tar.gz
      - name: Bundle install
        run: bundle install
      - name: Install GnuPG
        run: apk add --no-cache gnupg
      - uses: crazy-max/ghaction-import-gpg@v3
        id: pgp
        with:
          gpg-private-key: ${{ secrets.pgp_key }}
          passphrase: ${{ secrets.pgp_passphrase }}
      - name: Sign API files
        run: ./scripts/sign.sh ${{ secrets.pgp_passphrase }} ${{ steps.pgp.outputs.keyid }}
      - name: Minify JavaScript files
        run: ./scripts/minify-js.sh
      - name: Build region sites
        run: ./scripts/regions.rb
      - name: Test HTML files
        run: bundle exec rake proof
        env:
          NOKOGIRI_USE_SYSTEM_LIBRARIES: true
      - uses: crazy-max/ghaction-github-pages@v2
        with:
          target_branch: gh-pages
          build_dir: _site
          fqdn: ${{ secrets.domain }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
